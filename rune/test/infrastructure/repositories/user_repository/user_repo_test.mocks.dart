// Mocks generated by Mockito 5.2.0 from annotations
// in rune/test/infrastructure/repositories/user_repository/user_repo_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:rune/domain/models.dart' as _i2;

import 'user_repo_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeExpect_0<T> extends _i1.Fake implements _i2.Expect<T> {}

/// A class which mocks [UserRepoTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepoTest extends _i1.Mock implements _i3.UserRepoTest {
  MockUserRepoTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Expect<_i2.User>> login(String? email, String? password) =>
      (super.noSuchMethod(Invocation.method(#login, [email, password]),
              returnValue:
                  Future<_i2.Expect<_i2.User>>.value(_FakeExpect_0<_i2.User>()))
          as _i4.Future<_i2.Expect<_i2.User>>);
  @override
  _i4.Future<_i2.Expect<_i2.User>> register(
          String? email, String? password, String? fullname) =>
      (super.noSuchMethod(
              Invocation.method(#register, [email, password, fullname]),
              returnValue:
                  Future<_i2.Expect<_i2.User>>.value(_FakeExpect_0<_i2.User>()))
          as _i4.Future<_i2.Expect<_i2.User>>);
  @override
  _i4.Future<_i2.Expect<_i2.User>> changePassword(
          String? password, String? newPassword, String? email) =>
      (super.noSuchMethod(
          Invocation.method(#changePassword, [password, newPassword, email]),
          returnValue: Future<_i2.Expect<_i2.User>>.value(
              _FakeExpect_0<_i2.User>())) as _i4.Future<_i2.Expect<_i2.User>>);
  @override
  _i4.Future<_i2.Expect<_i2.User>> getUser(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#getUser, [id]),
              returnValue:
                  Future<_i2.Expect<_i2.User>>.value(_FakeExpect_0<_i2.User>()))
          as _i4.Future<_i2.Expect<_i2.User>>);
  @override
  _i4.Future<_i2.Expect<_i2.User>> updateUser(
          {String? fullname, String? email, String? handle, bool? makeAdmin}) =>
      (super.noSuchMethod(
              Invocation.method(#updateUser, [], {
                #fullname: fullname,
                #email: email,
                #handle: handle,
                #makeAdmin: makeAdmin
              }),
              returnValue:
                  Future<_i2.Expect<_i2.User>>.value(_FakeExpect_0<_i2.User>()))
          as _i4.Future<_i2.Expect<_i2.User>>);
}
